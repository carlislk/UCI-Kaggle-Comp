{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Results\n",
    "\n",
    "# Both Feature Sets\n",
    "# [349]\tvalidation_0-rmse:0.544184\n",
    "# [160]\tvalidation_0-rmse:0.536579\n",
    "\n",
    "# Single Feature Set\n",
    "# [160]\tvalidation_0-rmse:0.561419\n",
    "\n",
    "# 9th place  max_depth=20, n_estimators=161, learning_rate=0.03, nthread=4, subsample=0.95, colsample_bytree=0.85, seed=4242 )\n",
    "#[160]\tvalidation_0-rmse:0.118262\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(60000, 91)\n",
      "(60000, 1)\n",
      "(40000, 91)\n"
     ]
    }
   ],
   "source": [
    "# Iris Data\n",
    "\n",
    "from sklearn.cross_validation import train_test_split\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import roc_auc_score\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.svm import OneClassSVM\n",
    "import sklearn.linear_model as lm\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import xgboost as xgb\n",
    "\n",
    "# Data Files\n",
    "\n",
    "# load data\n",
    "df_train_1 = pd.read_csv('./data/kaggle.X1.train.txt', header=None)\n",
    "df_train_2 = pd.read_csv('./data/kaggle.X2.train.txt', header=None)\n",
    "df_train_Y = pd.read_csv('./data/kaggle.Y.train.txt', header=None)\n",
    "df_test_1 = pd.read_csv('./data/kaggle.X1.test.txt', header=None)\n",
    "df_test_2 = pd.read_csv('./data/kaggle.X1.test.txt', header=None)\n",
    "\n",
    "# # Combine Train Data \n",
    "# df_train_X = pd.concat([df_train_1, df_train_2], axis=1)\n",
    "\n",
    "# # Combine Test Data \n",
    "# df_test_X = pd.concat([df_test_1, df_test_2], axis=1)\n",
    "\n",
    "\n",
    "# Create Numpy Arrays\n",
    "# X_train = df_train_X.values\n",
    "y_train = df_train_Y.values\n",
    "# X_test = df_test_X.values\n",
    "\n",
    "X_train = df_train_1.values\n",
    "X_test = df_test_1.values\n",
    "\n",
    "print(X_train.shape)\n",
    "print(y_train.shape)\n",
    "print(X_test.shape)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Will train until validation_0 error hasn't decreased in 20 rounds.\n",
      "[0]\tvalidation_0-rmse:0.827767\n",
      "[1]\tvalidation_0-rmse:0.817810\n",
      "[2]\tvalidation_0-rmse:0.808085\n",
      "[3]\tvalidation_0-rmse:0.798936\n",
      "[4]\tvalidation_0-rmse:0.790161\n",
      "[5]\tvalidation_0-rmse:0.781716\n",
      "[6]\tvalidation_0-rmse:0.773741\n",
      "[7]\tvalidation_0-rmse:0.765667\n",
      "[8]\tvalidation_0-rmse:0.758277\n",
      "[9]\tvalidation_0-rmse:0.751197\n",
      "[10]\tvalidation_0-rmse:0.744440\n",
      "[11]\tvalidation_0-rmse:0.737851\n",
      "[12]\tvalidation_0-rmse:0.731643\n",
      "[13]\tvalidation_0-rmse:0.725734\n",
      "[14]\tvalidation_0-rmse:0.720251\n",
      "[15]\tvalidation_0-rmse:0.714742\n",
      "[16]\tvalidation_0-rmse:0.709332\n",
      "[17]\tvalidation_0-rmse:0.704346\n",
      "[18]\tvalidation_0-rmse:0.699727\n",
      "[19]\tvalidation_0-rmse:0.695341\n",
      "[20]\tvalidation_0-rmse:0.691062\n",
      "[21]\tvalidation_0-rmse:0.686992\n",
      "[22]\tvalidation_0-rmse:0.683146\n",
      "[23]\tvalidation_0-rmse:0.679535\n",
      "[24]\tvalidation_0-rmse:0.675788\n",
      "[25]\tvalidation_0-rmse:0.672528\n",
      "[26]\tvalidation_0-rmse:0.669116\n",
      "[27]\tvalidation_0-rmse:0.666024\n",
      "[28]\tvalidation_0-rmse:0.663314\n",
      "[29]\tvalidation_0-rmse:0.660436\n",
      "[30]\tvalidation_0-rmse:0.657859\n",
      "[31]\tvalidation_0-rmse:0.655322\n",
      "[32]\tvalidation_0-rmse:0.653060\n",
      "[33]\tvalidation_0-rmse:0.650807\n",
      "[34]\tvalidation_0-rmse:0.648685\n",
      "[35]\tvalidation_0-rmse:0.646694\n",
      "[36]\tvalidation_0-rmse:0.644702\n",
      "[37]\tvalidation_0-rmse:0.642866\n",
      "[38]\tvalidation_0-rmse:0.640996\n",
      "[39]\tvalidation_0-rmse:0.639289\n",
      "[40]\tvalidation_0-rmse:0.637700\n",
      "[41]\tvalidation_0-rmse:0.636111\n",
      "[42]\tvalidation_0-rmse:0.634566\n",
      "[43]\tvalidation_0-rmse:0.633216\n",
      "[44]\tvalidation_0-rmse:0.631856\n",
      "[45]\tvalidation_0-rmse:0.630520\n",
      "[46]\tvalidation_0-rmse:0.629224\n",
      "[47]\tvalidation_0-rmse:0.628087\n",
      "[48]\tvalidation_0-rmse:0.627042\n",
      "[49]\tvalidation_0-rmse:0.625956\n",
      "[50]\tvalidation_0-rmse:0.624935\n",
      "[51]\tvalidation_0-rmse:0.624074\n",
      "[52]\tvalidation_0-rmse:0.623140\n",
      "[53]\tvalidation_0-rmse:0.622158\n",
      "[54]\tvalidation_0-rmse:0.621303\n",
      "[55]\tvalidation_0-rmse:0.620528\n",
      "[56]\tvalidation_0-rmse:0.619866\n",
      "[57]\tvalidation_0-rmse:0.619144\n",
      "[58]\tvalidation_0-rmse:0.618414\n",
      "[59]\tvalidation_0-rmse:0.617731\n",
      "[60]\tvalidation_0-rmse:0.617056\n",
      "[61]\tvalidation_0-rmse:0.616420\n",
      "[62]\tvalidation_0-rmse:0.615806\n",
      "[63]\tvalidation_0-rmse:0.615251\n",
      "[64]\tvalidation_0-rmse:0.614738\n",
      "[65]\tvalidation_0-rmse:0.614171\n",
      "[66]\tvalidation_0-rmse:0.613614\n",
      "[67]\tvalidation_0-rmse:0.613152\n",
      "[68]\tvalidation_0-rmse:0.612683\n",
      "[69]\tvalidation_0-rmse:0.612248\n",
      "[70]\tvalidation_0-rmse:0.611780\n",
      "[71]\tvalidation_0-rmse:0.611433\n",
      "[72]\tvalidation_0-rmse:0.611139\n",
      "[73]\tvalidation_0-rmse:0.610777\n",
      "[74]\tvalidation_0-rmse:0.610459\n",
      "[75]\tvalidation_0-rmse:0.610078\n",
      "[76]\tvalidation_0-rmse:0.609738\n",
      "[77]\tvalidation_0-rmse:0.609414\n",
      "[78]\tvalidation_0-rmse:0.609151\n",
      "[79]\tvalidation_0-rmse:0.608813\n",
      "[80]\tvalidation_0-rmse:0.608553\n",
      "[81]\tvalidation_0-rmse:0.608295\n",
      "[82]\tvalidation_0-rmse:0.607984\n",
      "[83]\tvalidation_0-rmse:0.607741\n",
      "[84]\tvalidation_0-rmse:0.607489\n",
      "[85]\tvalidation_0-rmse:0.607275\n",
      "[86]\tvalidation_0-rmse:0.607064\n",
      "[87]\tvalidation_0-rmse:0.606864\n",
      "[88]\tvalidation_0-rmse:0.606651\n",
      "[89]\tvalidation_0-rmse:0.606463\n",
      "[90]\tvalidation_0-rmse:0.606256\n",
      "[91]\tvalidation_0-rmse:0.606047\n",
      "[92]\tvalidation_0-rmse:0.605924\n",
      "[93]\tvalidation_0-rmse:0.605728\n",
      "[94]\tvalidation_0-rmse:0.605561\n",
      "[95]\tvalidation_0-rmse:0.605405\n",
      "[96]\tvalidation_0-rmse:0.605266\n",
      "[97]\tvalidation_0-rmse:0.605110\n",
      "[98]\tvalidation_0-rmse:0.604984\n",
      "[99]\tvalidation_0-rmse:0.604878\n",
      "[100]\tvalidation_0-rmse:0.604731\n",
      "[101]\tvalidation_0-rmse:0.604635\n",
      "[102]\tvalidation_0-rmse:0.604528\n",
      "[103]\tvalidation_0-rmse:0.604406\n",
      "[104]\tvalidation_0-rmse:0.604317\n",
      "[105]\tvalidation_0-rmse:0.604230\n",
      "[106]\tvalidation_0-rmse:0.604133\n",
      "[107]\tvalidation_0-rmse:0.604051\n",
      "[108]\tvalidation_0-rmse:0.603977\n",
      "[109]\tvalidation_0-rmse:0.603905\n",
      "[110]\tvalidation_0-rmse:0.603823\n",
      "[111]\tvalidation_0-rmse:0.603747\n",
      "[112]\tvalidation_0-rmse:0.603676\n",
      "[113]\tvalidation_0-rmse:0.603593\n",
      "[114]\tvalidation_0-rmse:0.603527\n",
      "[115]\tvalidation_0-rmse:0.603437\n",
      "[116]\tvalidation_0-rmse:0.603379\n",
      "[117]\tvalidation_0-rmse:0.603335\n",
      "[118]\tvalidation_0-rmse:0.603270\n",
      "[119]\tvalidation_0-rmse:0.603201\n",
      "[120]\tvalidation_0-rmse:0.603128\n",
      "[121]\tvalidation_0-rmse:0.603056\n",
      "[122]\tvalidation_0-rmse:0.602989\n",
      "[123]\tvalidation_0-rmse:0.602925\n",
      "[124]\tvalidation_0-rmse:0.602876\n",
      "[125]\tvalidation_0-rmse:0.602830\n",
      "[126]\tvalidation_0-rmse:0.602781\n",
      "[127]\tvalidation_0-rmse:0.602727\n",
      "[128]\tvalidation_0-rmse:0.602673\n",
      "[129]\tvalidation_0-rmse:0.602625\n",
      "[130]\tvalidation_0-rmse:0.602591\n",
      "[131]\tvalidation_0-rmse:0.602582\n",
      "[132]\tvalidation_0-rmse:0.602526\n",
      "[133]\tvalidation_0-rmse:0.602490\n",
      "[134]\tvalidation_0-rmse:0.602469\n",
      "[135]\tvalidation_0-rmse:0.602426\n",
      "[136]\tvalidation_0-rmse:0.602400\n",
      "[137]\tvalidation_0-rmse:0.602382\n",
      "[138]\tvalidation_0-rmse:0.602365\n",
      "[139]\tvalidation_0-rmse:0.602341\n",
      "[140]\tvalidation_0-rmse:0.602310\n",
      "[141]\tvalidation_0-rmse:0.602272\n",
      "[142]\tvalidation_0-rmse:0.602247\n",
      "[143]\tvalidation_0-rmse:0.602213\n",
      "[144]\tvalidation_0-rmse:0.602182\n",
      "[145]\tvalidation_0-rmse:0.602155\n",
      "[146]\tvalidation_0-rmse:0.602125\n",
      "[147]\tvalidation_0-rmse:0.602101\n",
      "[148]\tvalidation_0-rmse:0.602096\n",
      "[149]\tvalidation_0-rmse:0.602084\n",
      "[150]\tvalidation_0-rmse:0.602047\n",
      "[151]\tvalidation_0-rmse:0.602037\n",
      "[152]\tvalidation_0-rmse:0.602024\n",
      "[153]\tvalidation_0-rmse:0.602010\n",
      "[154]\tvalidation_0-rmse:0.601998\n",
      "[155]\tvalidation_0-rmse:0.601994\n",
      "[156]\tvalidation_0-rmse:0.601973\n",
      "[157]\tvalidation_0-rmse:0.601981\n",
      "[158]\tvalidation_0-rmse:0.601964\n",
      "[159]\tvalidation_0-rmse:0.601952\n",
      "[160]\tvalidation_0-rmse:0.601933\n",
      "[161]\tvalidation_0-rmse:0.601924\n",
      "[162]\tvalidation_0-rmse:0.601906\n",
      "[163]\tvalidation_0-rmse:0.601909\n",
      "[164]\tvalidation_0-rmse:0.601896\n",
      "[165]\tvalidation_0-rmse:0.601890\n",
      "[166]\tvalidation_0-rmse:0.601868\n",
      "[167]\tvalidation_0-rmse:0.601862\n",
      "[168]\tvalidation_0-rmse:0.601858\n",
      "[169]\tvalidation_0-rmse:0.601841\n",
      "[170]\tvalidation_0-rmse:0.601820\n",
      "[171]\tvalidation_0-rmse:0.601816\n",
      "[172]\tvalidation_0-rmse:0.601811\n",
      "[173]\tvalidation_0-rmse:0.601794\n",
      "[174]\tvalidation_0-rmse:0.601778\n",
      "[175]\tvalidation_0-rmse:0.601767\n",
      "[176]\tvalidation_0-rmse:0.601750\n",
      "[177]\tvalidation_0-rmse:0.601747\n",
      "[178]\tvalidation_0-rmse:0.601745\n",
      "[179]\tvalidation_0-rmse:0.601735\n",
      "[180]\tvalidation_0-rmse:0.601722\n",
      "[181]\tvalidation_0-rmse:0.601714\n",
      "[182]\tvalidation_0-rmse:0.601697\n",
      "[183]\tvalidation_0-rmse:0.601690\n",
      "[184]\tvalidation_0-rmse:0.601680\n",
      "[185]\tvalidation_0-rmse:0.601676\n",
      "[186]\tvalidation_0-rmse:0.601671\n",
      "[187]\tvalidation_0-rmse:0.601661\n",
      "[188]\tvalidation_0-rmse:0.601658\n",
      "[189]\tvalidation_0-rmse:0.601656\n",
      "[190]\tvalidation_0-rmse:0.601644\n",
      "[191]\tvalidation_0-rmse:0.601648\n",
      "[192]\tvalidation_0-rmse:0.601648\n",
      "[193]\tvalidation_0-rmse:0.601639\n",
      "[194]\tvalidation_0-rmse:0.601642\n",
      "[195]\tvalidation_0-rmse:0.601628\n",
      "[196]\tvalidation_0-rmse:0.601621\n",
      "[197]\tvalidation_0-rmse:0.601622\n",
      "[198]\tvalidation_0-rmse:0.601615\n",
      "[199]\tvalidation_0-rmse:0.601607\n",
      "[200]\tvalidation_0-rmse:0.601600\n",
      "[201]\tvalidation_0-rmse:0.601593\n",
      "[202]\tvalidation_0-rmse:0.601577\n",
      "[203]\tvalidation_0-rmse:0.601572\n",
      "[204]\tvalidation_0-rmse:0.601567\n",
      "[205]\tvalidation_0-rmse:0.601558\n",
      "[206]\tvalidation_0-rmse:0.601562\n",
      "[207]\tvalidation_0-rmse:0.601558\n",
      "[208]\tvalidation_0-rmse:0.601556\n",
      "[209]\tvalidation_0-rmse:0.601546\n",
      "[210]\tvalidation_0-rmse:0.601542\n",
      "[211]\tvalidation_0-rmse:0.601532\n",
      "[212]\tvalidation_0-rmse:0.601530\n",
      "[213]\tvalidation_0-rmse:0.601525\n",
      "[214]\tvalidation_0-rmse:0.601525\n",
      "[215]\tvalidation_0-rmse:0.601519\n",
      "[216]\tvalidation_0-rmse:0.601517\n",
      "[217]\tvalidation_0-rmse:0.601516\n",
      "[218]\tvalidation_0-rmse:0.601514\n",
      "[219]\tvalidation_0-rmse:0.601510\n",
      "[220]\tvalidation_0-rmse:0.601503\n",
      "[221]\tvalidation_0-rmse:0.601505\n",
      "[222]\tvalidation_0-rmse:0.601507\n",
      "[223]\tvalidation_0-rmse:0.601506\n",
      "[224]\tvalidation_0-rmse:0.601504\n",
      "[225]\tvalidation_0-rmse:0.601501\n",
      "[226]\tvalidation_0-rmse:0.601504\n",
      "[227]\tvalidation_0-rmse:0.601503\n",
      "[228]\tvalidation_0-rmse:0.601493\n",
      "[229]\tvalidation_0-rmse:0.601489\n",
      "[230]\tvalidation_0-rmse:0.601489\n",
      "[231]\tvalidation_0-rmse:0.601482\n",
      "[232]\tvalidation_0-rmse:0.601477\n",
      "[233]\tvalidation_0-rmse:0.601470\n",
      "[234]\tvalidation_0-rmse:0.601471\n",
      "[235]\tvalidation_0-rmse:0.601464\n",
      "[236]\tvalidation_0-rmse:0.601461\n",
      "[237]\tvalidation_0-rmse:0.601456\n",
      "[238]\tvalidation_0-rmse:0.601453\n",
      "[239]\tvalidation_0-rmse:0.601452\n",
      "[240]\tvalidation_0-rmse:0.601451\n",
      "[241]\tvalidation_0-rmse:0.601450\n",
      "[242]\tvalidation_0-rmse:0.601446\n",
      "[243]\tvalidation_0-rmse:0.601445\n",
      "[244]\tvalidation_0-rmse:0.601446\n",
      "[245]\tvalidation_0-rmse:0.601445\n",
      "[246]\tvalidation_0-rmse:0.601444\n",
      "[247]\tvalidation_0-rmse:0.601444\n",
      "[248]\tvalidation_0-rmse:0.601445\n",
      "[249]\tvalidation_0-rmse:0.601444\n",
      "[250]\tvalidation_0-rmse:0.601443\n",
      "[251]\tvalidation_0-rmse:0.601440\n",
      "[252]\tvalidation_0-rmse:0.601438\n",
      "[253]\tvalidation_0-rmse:0.601437\n",
      "[254]\tvalidation_0-rmse:0.601434\n",
      "[255]\tvalidation_0-rmse:0.601434\n",
      "[256]\tvalidation_0-rmse:0.601433\n",
      "[257]\tvalidation_0-rmse:0.601433\n",
      "[258]\tvalidation_0-rmse:0.601432\n",
      "[259]\tvalidation_0-rmse:0.601431\n",
      "[260]\tvalidation_0-rmse:0.601431\n",
      "[261]\tvalidation_0-rmse:0.601433\n",
      "[262]\tvalidation_0-rmse:0.601433\n",
      "[263]\tvalidation_0-rmse:0.601432\n",
      "[264]\tvalidation_0-rmse:0.601427\n",
      "[265]\tvalidation_0-rmse:0.601426\n",
      "[266]\tvalidation_0-rmse:0.601425\n",
      "[267]\tvalidation_0-rmse:0.601424\n",
      "[268]\tvalidation_0-rmse:0.601425\n",
      "[269]\tvalidation_0-rmse:0.601425\n",
      "[270]\tvalidation_0-rmse:0.601423\n",
      "[271]\tvalidation_0-rmse:0.601423\n",
      "[272]\tvalidation_0-rmse:0.601423\n",
      "[273]\tvalidation_0-rmse:0.601424\n",
      "[274]\tvalidation_0-rmse:0.601423\n",
      "[275]\tvalidation_0-rmse:0.601419\n",
      "[276]\tvalidation_0-rmse:0.601420\n",
      "[277]\tvalidation_0-rmse:0.601419\n",
      "[278]\tvalidation_0-rmse:0.601418\n",
      "[279]\tvalidation_0-rmse:0.601415\n",
      "[280]\tvalidation_0-rmse:0.601412\n",
      "[281]\tvalidation_0-rmse:0.601413\n",
      "[282]\tvalidation_0-rmse:0.601413\n",
      "[283]\tvalidation_0-rmse:0.601414\n",
      "[284]\tvalidation_0-rmse:0.601413\n",
      "[285]\tvalidation_0-rmse:0.601417\n",
      "[286]\tvalidation_0-rmse:0.601417\n",
      "[287]\tvalidation_0-rmse:0.601417\n",
      "[288]\tvalidation_0-rmse:0.601418\n",
      "[289]\tvalidation_0-rmse:0.601416\n",
      "[290]\tvalidation_0-rmse:0.601415\n",
      "[291]\tvalidation_0-rmse:0.601414\n",
      "[292]\tvalidation_0-rmse:0.601412\n",
      "[293]\tvalidation_0-rmse:0.601413\n",
      "[294]\tvalidation_0-rmse:0.601412\n",
      "[295]\tvalidation_0-rmse:0.601411\n",
      "[296]\tvalidation_0-rmse:0.601408\n",
      "[297]\tvalidation_0-rmse:0.601408\n",
      "[298]\tvalidation_0-rmse:0.601405\n",
      "[299]\tvalidation_0-rmse:0.601404\n",
      "[300]\tvalidation_0-rmse:0.601403\n",
      "[301]\tvalidation_0-rmse:0.601403\n",
      "[302]\tvalidation_0-rmse:0.601403\n",
      "[303]\tvalidation_0-rmse:0.601401\n",
      "[304]\tvalidation_0-rmse:0.601400\n",
      "[305]\tvalidation_0-rmse:0.601396\n",
      "[306]\tvalidation_0-rmse:0.601394\n",
      "[307]\tvalidation_0-rmse:0.601392\n",
      "[308]\tvalidation_0-rmse:0.601392\n",
      "[309]\tvalidation_0-rmse:0.601391\n",
      "[310]\tvalidation_0-rmse:0.601389\n",
      "[311]\tvalidation_0-rmse:0.601388\n",
      "[312]\tvalidation_0-rmse:0.601387\n",
      "[313]\tvalidation_0-rmse:0.601387\n",
      "[314]\tvalidation_0-rmse:0.601387\n",
      "[315]\tvalidation_0-rmse:0.601386\n",
      "[316]\tvalidation_0-rmse:0.601385\n",
      "[317]\tvalidation_0-rmse:0.601385\n",
      "[318]\tvalidation_0-rmse:0.601383\n",
      "[319]\tvalidation_0-rmse:0.601382\n",
      "[320]\tvalidation_0-rmse:0.601382\n",
      "[321]\tvalidation_0-rmse:0.601381\n",
      "[322]\tvalidation_0-rmse:0.601380\n",
      "[323]\tvalidation_0-rmse:0.601379\n",
      "[324]\tvalidation_0-rmse:0.601379\n",
      "[325]\tvalidation_0-rmse:0.601379\n",
      "[326]\tvalidation_0-rmse:0.601378\n",
      "[327]\tvalidation_0-rmse:0.601379\n",
      "[328]\tvalidation_0-rmse:0.601378\n",
      "[329]\tvalidation_0-rmse:0.601377\n",
      "[330]\tvalidation_0-rmse:0.601376\n",
      "[331]\tvalidation_0-rmse:0.601378\n",
      "[332]\tvalidation_0-rmse:0.601376\n",
      "[333]\tvalidation_0-rmse:0.601375\n",
      "[334]\tvalidation_0-rmse:0.601373\n",
      "[335]\tvalidation_0-rmse:0.601373\n",
      "[336]\tvalidation_0-rmse:0.601372\n",
      "[337]\tvalidation_0-rmse:0.601371\n",
      "[338]\tvalidation_0-rmse:0.601374\n",
      "[339]\tvalidation_0-rmse:0.601373\n",
      "[340]\tvalidation_0-rmse:0.601375\n",
      "[341]\tvalidation_0-rmse:0.601374\n",
      "[342]\tvalidation_0-rmse:0.601373\n",
      "[343]\tvalidation_0-rmse:0.601372\n",
      "[344]\tvalidation_0-rmse:0.601372\n",
      "[345]\tvalidation_0-rmse:0.601372\n",
      "[346]\tvalidation_0-rmse:0.601372\n",
      "[347]\tvalidation_0-rmse:0.601371\n",
      "[348]\tvalidation_0-rmse:0.601369\n",
      "[349]\tvalidation_0-rmse:0.601368\n",
      "[350]\tvalidation_0-rmse:0.601368\n",
      "[351]\tvalidation_0-rmse:0.601368\n",
      "[352]\tvalidation_0-rmse:0.601369\n",
      "[353]\tvalidation_0-rmse:0.601369\n",
      "[354]\tvalidation_0-rmse:0.601368\n",
      "[355]\tvalidation_0-rmse:0.601367\n",
      "[356]\tvalidation_0-rmse:0.601366\n",
      "[357]\tvalidation_0-rmse:0.601365\n",
      "[358]\tvalidation_0-rmse:0.601364\n",
      "[359]\tvalidation_0-rmse:0.601364\n",
      "[360]\tvalidation_0-rmse:0.601363\n",
      "[361]\tvalidation_0-rmse:0.601362\n",
      "[362]\tvalidation_0-rmse:0.601361\n",
      "[363]\tvalidation_0-rmse:0.601360\n",
      "[364]\tvalidation_0-rmse:0.601359\n",
      "[365]\tvalidation_0-rmse:0.601359\n",
      "[366]\tvalidation_0-rmse:0.601361\n",
      "[367]\tvalidation_0-rmse:0.601360\n",
      "[368]\tvalidation_0-rmse:0.601360\n",
      "[369]\tvalidation_0-rmse:0.601360\n",
      "[370]\tvalidation_0-rmse:0.601359\n",
      "[371]\tvalidation_0-rmse:0.601359\n",
      "[372]\tvalidation_0-rmse:0.601359\n",
      "[373]\tvalidation_0-rmse:0.601358\n",
      "[374]\tvalidation_0-rmse:0.601358\n",
      "[375]\tvalidation_0-rmse:0.601357\n",
      "[376]\tvalidation_0-rmse:0.601357\n",
      "[377]\tvalidation_0-rmse:0.601356\n",
      "[378]\tvalidation_0-rmse:0.601356\n",
      "[379]\tvalidation_0-rmse:0.601357\n",
      "[380]\tvalidation_0-rmse:0.601358\n",
      "[381]\tvalidation_0-rmse:0.601360\n",
      "[382]\tvalidation_0-rmse:0.601360\n",
      "[383]\tvalidation_0-rmse:0.601360\n",
      "[384]\tvalidation_0-rmse:0.601359\n",
      "[385]\tvalidation_0-rmse:0.601358\n",
      "[386]\tvalidation_0-rmse:0.601358\n",
      "[387]\tvalidation_0-rmse:0.601358\n",
      "[388]\tvalidation_0-rmse:0.601358\n",
      "[389]\tvalidation_0-rmse:0.601358\n",
      "[390]\tvalidation_0-rmse:0.601357\n",
      "[391]\tvalidation_0-rmse:0.601357\n",
      "[392]\tvalidation_0-rmse:0.601357\n",
      "[393]\tvalidation_0-rmse:0.601356\n",
      "[394]\tvalidation_0-rmse:0.601356\n",
      "[395]\tvalidation_0-rmse:0.601356\n",
      "[396]\tvalidation_0-rmse:0.601355\n",
      "[397]\tvalidation_0-rmse:0.601354\n",
      "[398]\tvalidation_0-rmse:0.601354\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done!\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[399]\tvalidation_0-rmse:0.601354\n"
     ]
    }
   ],
   "source": [
    "# Train Model\n",
    "\n",
    "depth = 20\n",
    "estimator = 400\n",
    "l_rate = 0.03\n",
    "sub_sample = 0.95\n",
    "col_sample = 0.85\n",
    "seed_val = 4242\n",
    "\n",
    "# classifier XBG Regression\n",
    "clf = xgb.XGBRegressor(missing=np.nan, max_depth=depth, n_estimators=estimator, learning_rate=l_rate, nthread=4, subsample=sub_sample, colsample_bytree=col_sample, seed=seed_val )\n",
    "\n",
    "X_fit, X_eval, y_fit, y_eval= train_test_split(X_train, y_train, test_size=0.3)\n",
    "\n",
    "# fitting\n",
    "# !! I Changed the fit paremeters to (X_fit, y_fit, )\n",
    "clf.fit(X_fit, y_fit, early_stopping_rounds=20, eval_metric=\"rmse\", eval_set=[(X_eval, y_eval)])\n",
    "\n",
    "# predicting\n",
    "y_pred= clf.predict(X_test)\n",
    "\n",
    "print(\"Done!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameters\n",
      "\n",
      "Depth:  20\n",
      "estimator:  400\n",
      "l_rate:  0.03\n",
      "sub_sample:  0.95\n",
      "col_sample:  0.85\n",
      "seed:  4242\n",
      "\n",
      "\n",
      " -- Scores -- Full Train -- \n",
      "Explained Variance Score:  0.845759674045\n",
      "Mean Absolute Error:  0.112841462744\n",
      "Mean Squared Error:  0.10740835856\n",
      "Median Absolute Error:  0.00140492197094\n",
      "R2 Score:  0.845750031712\n",
      "\n",
      "\n",
      " -- Scores -- Train Split -- \n",
      "Explained Variance Score:  0.999994118077\n",
      "Mean Absolute Error:  0.00131142846062\n",
      "Mean Squared Error:  4.1097525126e-06\n",
      "Median Absolute Error:  0.000839079606628\n",
      "R2 Score:  0.999994116928\n",
      "\n",
      "\n",
      " -- Scores -- Test Split -- \n",
      "Explained Variance Score:  0.482037596824\n",
      "Mean Absolute Error:  0.373078209404\n",
      "Mean Squared Error:  0.358018272444\n",
      "Median Absolute Error:  0.204656240369\n",
      "R2 Score:  0.481927984659\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Score\n",
    "\n",
    "from sklearn.metrics import explained_variance_score\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.metrics import median_absolute_error\n",
    "from sklearn.metrics import r2_score\n",
    "\n",
    "# Print Parameters\n",
    "print(\"Parameters\")\n",
    "print()\n",
    "print(\"Depth: \", depth)\n",
    "print(\"estimator: \", estimator)\n",
    "print(\"l_rate: \", l_rate)\n",
    "print(\"sub_sample: \", sub_sample)\n",
    "print(\"col_sample: \", col_sample)\n",
    "print(\"seed: \", seed_val)\n",
    "print()\n",
    "print()\n",
    "\n",
    "\n",
    "# Score On Full Train Set\n",
    "full_train_pred = clf.predict(X_train)\n",
    "print(\" -- Scores -- Full Train -- \")\n",
    "print(\"Explained Variance Score: \", explained_variance_score(y_train, full_train_pred ))\n",
    "print(\"Mean Absolute Error: \", mean_absolute_error(y_train, full_train_pred))\n",
    "print(\"Mean Squared Error: \", mean_squared_error(y_train, full_train_pred))\n",
    "print(\"Median Absolute Error: \", median_absolute_error(y_train, full_train_pred))\n",
    "print(\"R2 Score: \", r2_score(y_train, full_train_pred))\n",
    "print()\n",
    "print()\n",
    "\n",
    "# Score On Train Split\n",
    "split_train_pred = clf.predict(X_fit)\n",
    "print(\" -- Scores -- Train Split -- \")\n",
    "print(\"Explained Variance Score: \", explained_variance_score(y_fit, split_train_pred ))\n",
    "print(\"Mean Absolute Error: \", mean_absolute_error(y_fit, split_train_pred))\n",
    "print(\"Mean Squared Error: \", mean_squared_error(y_fit, split_train_pred))\n",
    "print(\"Median Absolute Error: \", median_absolute_error(y_fit, split_train_pred))\n",
    "print(\"R2 Score: \", r2_score(y_fit, split_train_pred))\n",
    "print()\n",
    "print()\n",
    "\n",
    "# Score On Test Split\n",
    "split_test_pred = clf.predict(X_eval)\n",
    "print(\" -- Scores -- Test Split -- \")\n",
    "print(\"Explained Variance Score: \", explained_variance_score(y_eval, split_test_pred ))\n",
    "print(\"Mean Absolute Error: \", mean_absolute_error(y_eval, split_test_pred))\n",
    "print(\"Mean Squared Error: \", mean_squared_error(y_eval, split_test_pred))\n",
    "print(\"Median Absolute Error: \", median_absolute_error(y_eval, split_test_pred))\n",
    "print(\"R2 Score: \", r2_score(y_eval, split_test_pred))\n",
    "print()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Score on Test File From 9th Place Prediction\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(40000,)\n",
      "Completed!\n"
     ]
    }
   ],
   "source": [
    "# Write To File\n",
    "import csv\n",
    "\n",
    "write_file = open('predictions_1.csv', 'w')\n",
    "write_file.write('ID,Prediction\\n')\n",
    "for x,y in enumerate(y_pred):\n",
    "    write_file.write('{},{} \\n'.format(x+1, y))\n",
    "    \n",
    "                     \n",
    "write_file.close()\n",
    "\n",
    "print(y_pred.shape)\n",
    "\n",
    "print('Completed!')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
